# version: "3.8"


# services:
#   frontend:
#     build:
#       context: ./frontend
#     ports:

#       - "3001:5173"
#     volumes:
#       - ./frontend:/app
#       - frontend_node_modules:/app/node_modules
#     environment:
#       - NODE_ENV=development
#       - VITE_API_URL=https://localhost
#       - VITE_WS_URL=wss://localhost
#     depends_on:
#       - nginx

#   backend:
#     build:
#       context: ./api
#     ports:
#       - "8443:8443"
#       - "8080:8080"
#     env_file:
#       - .env
#     environment:
#       - DB_HOST=${DB_HOST}
#       - DB_PORT=${DB_PORT}
#       - DB_USER=${DB_USER}
#       - DB_PASSWORD=${DB_PASSWORD}
#       - DB_NAME=${DB_NAME}
#       - MONGO_URI=${MONGO_URI}
#       - IPFS_API=${IPFS_API}
#       - ENCRYP_REST_MASTER_KEY=${ENCRYP_REST_MASTER_KEY}
#       - REDIS_ADDR=redis:6379
#     depends_on:
#       - postgres
#       - mongo
#       - ipfs
#       - redis
#   redis:
#     image: redis:latest
#     ports:
#       - "6379:6379"
#     restart: unless-stopped

#   postgres:
#     image: postgres:15
#     ports:
#       - "5432:5432"
#     environment:
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#       - POSTGRES_DB=${POSTGRES_DB}
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   mongo:
#     image: mongo:latest
#     ports:
#       - "27017:27017"
#     environment:
#       - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
#       - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
#       - MONGO_INITDB_DATABASE=app_database
#     command: [ --auth ]  # Enables authentication
#     volumes:
#       - mongo_data:/data/db

#   ipfs:
#     image: ipfs/kubo:latest
#     ports:
#       - "5001:5001"
#       - "8081:8080"
#     volumes:
#       - ipfs_data:/data/ipfs

#   localai:
#     build:
#       context: ./localai
#     ports:
#       - "5000:5000"
#     volumes:
#       - ./localai:/app

# volumes:
#   postgres_data:
#   mongo_data:
#   ipfs_data:

#   frontend_node_modules:
version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3001:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=https://localhost/api
      - VITE_WS_URL=wss://localhost
    depends_on:
      - nginx

  backend:
    build:
      context: ./api
    expose:
      - "8443"
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - MONGO_URI=${MONGO_URI}
      - IPFS_API=${IPFS_API}
      - ENCRYP_REST_MASTER_KEY=${ENCRYP_REST_MASTER_KEY}
      - REDIS_ADDR=redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_PASS=
      - REDIS_DB=0
    depends_on:
      postgres:
        condition: service_started
        #condition: service_healthy
      mongo:
        #condition: service_healthy
        condition: service_started
      ipfs:
        condition: service_started
      redis:
        condition: service_healthy
    deploy:
      replicas: 3

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./api/certs:/etc/nginx/certs:ro
    depends_on:
      - backend

  redis:
    image: redis:7
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=app_database
    command: [ --auth ]
    volumes:
      - mongo_data:/data/db

  ipfs:
    image: ipfs/kubo:latest
    ports:
      - "5001:5001"
      - "8081:8080"
    volumes:
      - ipfs_data:/data/ipfs

  localai:
    build:
      context: ./localai
    ports:
      - "5000:5000"
    volumes:
      - ./localai:/app

volumes:
  postgres_data:
  mongo_data:
  ipfs_data:
  frontend_node_modules: